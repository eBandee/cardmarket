<?php

use yii\db\Schema;
use yii\db\Migration;
use yii\db\Query;

class m141123_104411_create_card_table extends Migration
{
    public function safeUp()
    {
        $this->createTable('card', [
            'card_id' => Schema::TYPE_INTEGER . ' NOT NULL',
            'card_set_id' => Schema::TYPE_STRING . ' NOT NULL',
            'card_type_id' => Schema::TYPE_INTEGER . ' NOT NULL',
            'name' => Schema::TYPE_STRING . ' NOT NULL',
            'rarity' => Schema::TYPE_STRING . ' NOT NULL',
            'manacost' => Schema::TYPE_STRING . ' NULL',
            'converted_manacost' => Schema::TYPE_SMALLINT . ' DEFAULT 0',
            'ability' => Schema::TYPE_TEXT,
            'color' => Schema::TYPE_STRING,
            'created_at' => Schema::TYPE_TIMESTAMP,
            'updated_at' => Schema::TYPE_TIMESTAMP,
        ]);
        $this->addPrimaryKey('pk_card_id', 'card', 'card_id');
        $this->addForeignKey('fk_card_set_id', 'card', 'card_set_id', 'card_set', 'card_set_id');
        $this->addForeignKey('fk_card_type_id', 'card', 'card_type_id', 'card_type', 'card_type_id');

        $cards = require_once(dirname(__FILE__) . DIRECTORY_SEPARATOR . 'cards.php');
        $cards = array_map(function ($card) {
            $typeNames      = explode(' â€” ', $card['Ntype']);
            $typeName       = array_pop($typeNames);
            $parentTypeName = array_pop($typeNames);

            if (!empty($parentTypeName)) {
                $card['Ntype'] = (new Query)
                    ->select('t1.card_type_id')
                    ->from('card_type t1')
                    ->leftJoin('card_type t2', 't2.card_type_id = t1.parent_card_type_id')
                    ->where('t1.name LIKE :name', [':name' => $typeName])
                    ->andWhere('t2.name LIKE :parentName', [':parentName' => $parentTypeName])
                    ->scalar();
            } else {
                $card['Ntype'] = (new Query)
                    ->select('t1.card_type_id')
                    ->from('card_type t1')
                    ->where('t1.name LIKE :name', [':name' => $typeName])
                    ->andWhere('t1.parent_card_type_id IS NULL')
                    ->scalar();
            }

            $card['Nmanacost'] = $card['Nmanacost'] == '' ? null : $card['Nmanacost'];

            return $card;
        }, $cards);

        $this->batchInsert('card', [
            'card_id', 'name', 'card_set_id', 'card_type_id', 'rarity', 'manacost', 'converted_manacost',
            'ability', 'color'
        ], $cards);

        parent::safeUp(); // TODO: Change the autogenerated stub
    }

    public function safeDown()
    {
        $this->dropTable('card');
        parent::safeDown(); // TODO: Change the autogenerated stub
    }

}
